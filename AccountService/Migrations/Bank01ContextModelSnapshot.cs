// <auto-generated />
using System;
using AccountService.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccountService.Migrations
{
    [DbContext(typeof(Bank01Context))]
    partial class Bank01ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AccountService.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Agency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ClientId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal>("DailyLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatusId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            AccountNumber = "7460",
                            AccountType = "Corrente",
                            Agency = "7460",
                            ClientId = 1,
                            DailyLimit = 2000m,
                            DateClosed = new DateTime(2025, 5, 14, 14, 42, 11, 569, DateTimeKind.Local).AddTicks(435),
                            DateOpened = new DateTime(2025, 5, 14, 14, 42, 11, 569, DateTimeKind.Local).AddTicks(421),
                            StatusId = 1
                        },
                        new
                        {
                            AccountId = 2,
                            AccountNumber = "7461",
                            AccountType = "Poupança",
                            Agency = "7460",
                            ClientId = 2,
                            DailyLimit = 5000m,
                            DateClosed = new DateTime(2025, 5, 14, 14, 42, 11, 569, DateTimeKind.Local).AddTicks(441),
                            DateOpened = new DateTime(2025, 5, 14, 14, 42, 11, 569, DateTimeKind.Local).AddTicks(440),
                            StatusId = 2
                        },
                        new
                        {
                            AccountId = 3,
                            AccountNumber = "7462",
                            AccountType = "Corrente",
                            Agency = "7460",
                            ClientId = 1,
                            DailyLimit = 2000m,
                            DateClosed = new DateTime(2025, 5, 14, 14, 42, 11, 569, DateTimeKind.Local).AddTicks(443),
                            DateOpened = new DateTime(2025, 5, 14, 14, 42, 11, 569, DateTimeKind.Local).AddTicks(443),
                            StatusId = 1
                        });
                });

            modelBuilder.Entity("AccountService.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("StatusId");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            StatusName = "Ativo"
                        },
                        new
                        {
                            StatusId = 2,
                            StatusName = "Bloqueado"
                        },
                        new
                        {
                            StatusId = 3,
                            StatusName = "Desbloqueado"
                        },
                        new
                        {
                            StatusId = 4,
                            StatusName = "Fechado"
                        },
                        new
                        {
                            StatusId = 5,
                            StatusName = "Cancelado"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
